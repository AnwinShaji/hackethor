{"version":3,"sources":["Header.js","firebase.js","TinderCards.js","SwipeButtons.js","Chat.js","Chats.js","ChatScreen.js","App.js","reportWebVitals.js","index.js"],"names":["Header","backButton","history","useHistory","className","IconButton","onClick","replace","fontSize","to","src","alt","database","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","firestore","HackethorCards","useState","people","setPeople","useEffect","unsubscribe","collection","onSnapshot","docs","map","doc","data","person","preventSwipe","style","backgroundImage","url","name","SwipeButtons","Chat","message","profilepic","timestamp","Avatar","Chats","ChatScreen","input","setInput","image","messages","setMessages","value","onChange","e","target","type","placeholder","preventDefault","App","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ef8a51c1.chunk.js","sourcesContent":["import React from 'react';\r\nimport './Header.css';\r\nimport PersonIcon from '@material-ui/icons/Person';\r\nimport ForumIcon from '@material-ui/icons/Forum';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ArrowBackIosIcon from '@material-ui/icons/ArrowBackIos';\r\nimport { Link, useHistory } from 'react-router-dom';\r\n\r\nfunction Header({backButton}){\r\n    const history = useHistory();\r\n    return(\r\n       <div className=\"header\">\r\n           \r\n           {backButton ? (\r\n               <IconButton onClick={() => history.replace(backButton)}>\r\n               <ArrowBackIosIcon className=\"header_back\" fontSize=\"large\" />\r\n               </IconButton>\r\n           ):(\r\n            <IconButton>\r\n            <PersonIcon className=\"header_icon\" fontSize=\"large\" />\r\n            </IconButton>\r\n           )}\r\n          \r\n           <Link to=\"/\">\r\n           <img className=\"header_logo\" src=\"https://i.pinimg.com/originals/d1/ce/fc/d1cefc2bf68e7f870f42b9289ba43298.jpg\" alt=\"Hackethor Logo\"/>\r\n           </Link>\r\n           <Link to=\"/chat\">\r\n           <IconButton>\r\n           <ForumIcon className=\"header_icon\" fontSize=\"large\" />\r\n           </IconButton>\r\n           </Link>\r\n       </div> \r\n    )\r\n}\r\nexport default Header;","import firebase from \"firebase\";\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyD70rx9OXf0IErUSQwZ6P4FnNRmRz5Qi0c\",\r\n    authDomain: \"hackethor-97fd.firebaseapp.com\",\r\n    projectId: \"hackethor-97fd\",\r\n    storageBucket: \"hackethor-97fd.appspot.com\",\r\n    messagingSenderId: \"72462184156\",\r\n    appId: \"1:72462184156:web:81016a736f7d856280ce19\",\r\n    measurementId: \"G-9HQMLE8W1L\"\r\n  };\r\n  const firebaseApp = firebase.initializeApp(firebaseConfig);\r\n  const database = firebase.firestore();\r\n  export default database;","import React, { useEffect, useState } from \"react\";\r\nimport database from \"./firebase\";\r\nimport TinderCards from \"react-tinder-card\";\r\nimport \"./TinderCards.css\";\r\n\r\nfunction HackethorCards() {\r\n     const [people, setPeople]=useState([]);\r\n    useEffect(() => {\r\n        const unsubscribe = database.collection('people').onSnapshot(onSnapshot => (\r\n            setPeople(onSnapshot.docs.map(doc => doc.data()))\r\n        ));\r\n        return() => {\r\n            unsubscribe();\r\n        };\r\n    }, []);\r\n    return(\r\n        <div>\r\n<div className=\"TinderCard_container\">\r\n    \r\n</div>\r\n  {people.map((person) => (\r\n    <TinderCards \r\n    className=\"swipe\" \r\n    key={person.name} \r\n    preventSwipe={[\"up\", \"down\"]}\r\n    >\r\n        <div style={{ backgroundImage: `url(${person.url})` }}\r\n        className=\"card\">\r\n            <h3>{person.name}</h3>\r\n        </div>\r\n    </TinderCards>\r\n))}   \r\n        </div>\r\n    );\r\n}\r\nexport default HackethorCards;","import React from \"react\";\r\nimport ReplayIcon from \"@material-ui/icons/Replay\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport StarRateIcon from \"@material-ui/icons/StarRate\";\r\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\r\nimport FlashOnIcon from \"@material-ui/icons/FlashOn\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport './SwipeButtons.css';\r\n\r\nconst SwipeButtons = () => {\r\n    return(\r\n        <div className=\"swipeButtons\">\r\n            <IconButton className=\"buttonRepeat\">\r\n            <ReplayIcon fontSize=\"large\" />\r\n            </IconButton>\r\n            <IconButton className=\"buttonClose\">\r\n            <CloseIcon fontSize=\"large\" />\r\n            </IconButton>\r\n           <IconButton className=\"buttonStar\">\r\n           <StarRateIcon fontSize=\"large\" />\r\n           </IconButton>\r\n           <IconButton className=\"buttonFav\">\r\n           <FavoriteIcon fontSize=\"large\" />\r\n           </IconButton>\r\n            <IconButton className=\"buttonFlash\">\r\n            <FlashOnIcon fontSize=\"large\" /> \r\n            </IconButton>\r\n        </div>\r\n    )\r\n}\r\nexport default SwipeButtons;","import recat from 'react';\r\nimport './Chat.css';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction Chat({ name, message, profilepic, timestamp}){\r\n    return(\r\n        <Link to={`/chat/${name}`}>\r\n        <div className=\"chat\">\r\n            <Avatar className=\"chat_image\" src={profilepic} />\r\n<div className=\"chat_details\">\r\n    <h2>{name}</h2>\r\n    <p>{message}</p>\r\n</div>\r\n        <p className=\"chat_timestamp\">{timestamp}</p>\r\n        </div>\r\n        </Link>\r\n    );\r\n}\r\nexport default Chat;","import react from \"react\";\r\nimport './Chats.css';\r\nimport Chat from \"./Chat\";\r\n\r\nfunction Chats(){\r\n    return (\r\n        <div className=\"chats\">\r\n            <Chat\r\n            name=\"Sam\"\r\n            message=\"Hai\"\r\n            timestamp=\"40 second ago\"\r\n           profilepic=\"https://static.toiimg.com/thumb/msid-82160344,width-1200,height-900,resizemode-4/.jpg\"\r\n            />\r\n<Chat\r\n            name=\"Anwin\"\r\n            message=\"Hai\"\r\n            timestamp=\"40 second ago\"\r\n            profilepic=\"https://static.toiimg.com/thumb/msid-82160344,width-1200,height-900,resizemode-4/.jpg\"\r\n            />\r\n        </div>\r\n    )\r\n}\r\nexport default Chats;","import { Avatar } from '@material-ui/core';\r\nimport react, { useState } from 'react';\r\nimport Chat from './Chat';\r\nimport './ChatScreen.css';\r\n\r\nfunction ChatScreen(){\r\n    const [input, setInput] = useState('');\r\n    const [messages, setMessages] =useState([\r\n        {\r\n            name:'Anwin',\r\n            image:'https://static.toiimg.com/thumb/msid-82160344,width-1200,height-900,resizemode-4/.jpg',\r\n            message:'hai',\r\n        },\r\n        {\r\n            name:'Anwin',\r\n            image:'https://static.toiimg.com/thumb/msid-82160344,width-1200,height-900,resizemode-4/.jpg',\r\n            message:'How is it',\r\n        },\r\n        {\r\n            message:'It is nice',\r\n        },\r\n    ]);\r\n    const handleSend = e => {\r\n        e.preventDefault();\r\n        setMessages([...messages, {message: input }]);\r\n        setInput('');\r\n    }\r\n    return (\r\n        <div className=\"chatScreen\">\r\n            <p className=\"chatScreen_MainText\">YOU MATCHED WITH ANWIN ON 10/02/2021</p>\r\n            {messages.map(message => (\r\n                message.name ? (\r\n                    <div className=\"chatScreen_message\">\r\n                    <Avatar className=\"chatScreen_image\" alt={message.name} src={message.image} />\r\n                    <p className=\"chatSCreen_text\">{message.message}</p>\r\n                </div>\r\n                ) : (\r\n                    <div className=\"chatScreen_message\">\r\n                    <p className=\"chatSCreen_textUser\">{message.message}</p>\r\n                </div>\r\n                )\r\n                \r\n            ))}\r\n            \r\n                <form className=\"ChatScreen_input\">\r\n                    <input value={input} onChange={e => setInput(e.target.value)} className=\"ChatScreen_inputField\" type=\"text\" placeholder=\"Type a message...\" />\r\n                    <button onClick={handleSend} className=\"chatScreen_btn\">Send</button>\r\n                </form>\r\n        </div>\r\n);\r\n    \r\n}\r\nexport default ChatScreen;","import react from 'react';\nimport Header from './Header';\nimport HackethorCards from './TinderCards';\nimport SwipeButtons from './SwipeButtons';\nimport Chats from './Chats';\nimport ChatScreen from './ChatScreen';\nimport './App.css';\nimport { BrowserRouter as Router, Switch, Route} from 'react-router-dom';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Router>\n       \n        <Switch>\n        <Route path='/chat/:person'>\n          <Header backButton=\"/chat\" />\n            <ChatScreen />\n          </Route>\n        <Route path='/chat'>\n          <Header backButton=\"/\" />\n            <Chats />\n          </Route>\n          <Route path='/'>\n          <Header />\n            <HackethorCards />\n            <SwipeButtons />\n          </Route>\n\n        </Switch>\n        {/*Below Button*/}\n        {/*Common Chat*/}\n        {/*Individual chat*/}\n      </Router>\n     \n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}